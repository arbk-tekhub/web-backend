name: "CI Pipeline"
on:
  push:
    branches:
      - "main"
    paths-ignore:
      - "Makefile"
      - "README.md"
      - "LICENSE"
      - "docker-compose.yml"
      - ".gitignore"
      - ".env.example"
      - "caddy/**"
      - ".github/workflows/caddy.yml"
  pull_request:
    branches:
      - "main"
  workflow_dispatch:

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: false

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.3'
          cache: true
      - name: Format code
        run: go fmt ./... 
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
  audit:
    name: Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install make tool
        run: |
          sudo apt update -y
          sudo apt install -y make      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.3'
          cache: false
      - name: Get go mod cache path
        run: |
          echo "GOMODCACHE_PATH=$(go env GOMODCACHE)" >> $GITHUB_ENV
      - name: Setup GO Cache
        uses: actions/cache@v4
        with:
          path: ${{ env.GOMODCACHE_PATH }}
          key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-          
      - name: Tidy mod file
        run: go mod tidy -v
      - name: Start audit
        run: make audit
        continue-on-error: true
  build:
    name: Build Docker Image
    if: github.event_name != 'pull_request'
    needs: [lint,audit]
    runs-on: ubuntu-latest
    env:
      CONTAINER_REGISTRY: docker.io
      DOCKER_IMAGE_NAME: arafetk/benktech-api
      DOCKER_IMAGE_TAG: latest    
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Containerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}